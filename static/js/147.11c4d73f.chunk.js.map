{"version":3,"file":"static/js/147.11c4d73f.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterName\":\"Filter_filterName__Y2kKA\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <div className={css.filterContainer}>\n      <label className={css.filterLabel}>Find :</label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formField\":\"ContactForm_formField__O5fo+\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { fetchContacts, addContact } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevData => ({ ...prevData, [name]: value }));\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    const { name, number } = formData;\n    if (name && number) {\n      dispatch(\n        addContact({\n          id: nanoid(),\n          name,\n          number,\n        })\n      );\n      setFormData({\n        name: '',\n        number: '',\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitForm} className={css.contactForm}>\n        <div className={css.formField}>\n          <label className={css.formLabel}>Name:</label>\n          <input\n            className={css.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className={css.formField}>\n          <label className={css.formLabel}>Number:</label>\n          <input\n            className={css.formInput}\n            type=\"text\"\n            name=\"number\"\n            value={formData.number}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n        <Filter />\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <span>{contact.name}: </span>\n      <span style={{ marginRight: '20px', marginLeft: 'auto' }}>\n        {contact.number}\n      </span>\n      <button onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete\n      </button>\n    </>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.loading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactName\":\"ContactList_contactName__wLcl6\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\",\"noPadding\":\"ContactList_noPadding__H6Zwb\"};","import { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport css from './ContactList.module.css';\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={`${css.contactList} ${css.noPadding}`}>\n      {filteredContacts.map(contact => {\n        return (\n          <li key={contact.id} className={css.contactListItem}>\n            <ContactListItem contact={contact} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactListItem } from '../components/ContactListItem/ContactListItem';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n\n      <ContactList>\n        <ContactListItem />\n      </ContactList>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Filter","filter","useSelector","state","dispatch","useDispatch","className","css","type","value","onChange","event","setFilter","target","useState","name","number","formData","setFormData","useEffect","fetchContacts","handleInputChange","prevData","onSubmit","preventDefault","addContact","ContactListItem","contact","style","marginRight","marginLeft","onClick","deleteContact","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilteredContacts","contacts","items","toLowerCase","includes","ContactList","filteredContacts"],"sourceRoot":""}